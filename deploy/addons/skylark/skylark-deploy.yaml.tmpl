# Source: skylark/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: skylark
  namespace: openaios
  labels:
    helm.sh/chart: skylark-0.7.0
    app.kubernetes.io/name: skylark
    app.kubernetes.io/instance: skylark
    app.kubernetes.io/version: "0.7.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: skylark
      app.kubernetes.io/instance: skylark
      gcp-auth-skip-secret: "true"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: skylark
        app.kubernetes.io/instance: skylark
        gcp-auth-skip-secret: "true"
    spec:
      serviceAccountName: skylark
      securityContext: {}
      initContainers:
        - image: {{.CustomRegistries.Skylark | default .ImageRepository }}{{.Images.Skylark}}
          args:
            - skylark
            - core
            - init
          imagePullPolicy: IfNotPresent
          name: skylark-init
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 512Mi
          securityContext: {}
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SKYLARK_CRDS_DIR
              value: "/skylark/crds"
            - name: "WEBHOOK_TLS_SECRET_NAME"
              value: webhook-tls-secret
            - name: "WEBHOOK_SERVICE_NAME"
              value: skylark-webhooks
            - name: "WEBHOOK_SERVICE_PORT"
              value: "9443"
            - name: "WEBHOOK_MUTATING_CONFIG_NAME"
              value: skylark-mutating-webhook-config
      containers:
        - name: skylark
          securityContext: {}
          image: {{.CustomRegistries.Skylark | default .ImageRepository }}{{.Images.Skylark}}
          args:
            - skylark
            - core
            - start
            - --debug
          imagePullPolicy: IfNotPresent
          ports:
            - name: probe
              containerPort: 8081
            - name: webhooks
              containerPort: 9443
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION
              value: "false"
            - name: INVALID_POD_RELEASE_TTL
              value: "120"
            - name: "WEBHOOK_TLS_SECRET_NAME"
              value: webhook-tls-secret
            - name: "WEBHOOK_TLS_CERT_DIR"
              value: /tmp/k8s-webhook-server/serving-certs
            - name: "HELM_CHARTS_BASE_DIR"
              value: "/skylark/helm-charts/charts"
            - name: "HELM_CHARTS_TPL_DIR"
              value: "/skylark/helm-charts/chart-templates/skylark-value-charts-tpl"
            - name: HELM_CHARTS_GLOBAL_VALUE_DIR
              value: "/skylark/helm-charts/global"
            - name: SKYLARK_SYS_CONFIG_DIR
              value: "/skylark/etc"
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-tls-secret
            - mountPath: /skylark/helm-charts/global/global.values.yaml
              subPath: global.values.yaml
              name: skylark-config
            - mountPath: /skylark/etc/sys.config.yaml
              subPath: sys.config.yaml
              name: skylark-config
          livenessProbe:
            tcpSocket:
              port: probe
          readinessProbe:
            tcpSocket:
              port: probe
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: webhook-tls-secret
          secret:
            # this secret will be created by the Helm with empty secret data
            # initContainers will patch the empty secret data with the following values
            # 1. tls.key
            # 2. tls.crt
            # 3. ca.crt
            secretName: webhook-tls-secret
        - name: skylark-config
          configMap:
            name: skylark-configmap
